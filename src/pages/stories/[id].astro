---
import Layout from '../../layouts/Layout.astro';
import { getAllStories, getStoryById } from '../../lib/stories';

export async function getStaticPaths() {
  const stories = await getAllStories();
  return stories.map(story => ({
    params: { id: story.id }
  }));
}

const { id } = Astro.params;
const story = await getStoryById(id!);

if (!story) {
  return Astro.redirect('/404');
}
---

<Layout title={story.config.title}>
  <div class="story-reader">
    <!-- 导航栏 -->
    <nav class="story-nav">
      <a href="/" class="back-btn">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m12 19-7-7 7-7"/>
          <path d="M19 12H5"/>
        </svg>
        返回书架
      </a>
      <div class="book-info">
        <h1 class="story-title">{story.config.title}</h1>
        <div class="story-meta">
          <span class="author">作者：{story.config.author}</span>
          <span class="date">{story.config.createdDate}</span>
        </div>
      </div>
    </nav>

    <!-- 书本阅读器 -->
    <div class="book-container" id="bookContainer">
      <div class="book-wrapper">
        <!-- 书本封面/背景 -->
        <div class="book-cover">
          <div class="book-spine"></div>
          
          <!-- 左页（图片页） -->
          <div class="book-page left-page">
            <div class="page-content">
              <div class="image-frame">
                <img 
                  id="storyImage" 
                  src={story.images.pages[0]} 
                  alt={`${story.config.title} - 第1页`}
                  loading="lazy"
                  class="story-image"
                />
              </div>
            </div>
          </div>

          <!-- 右页（文字页） -->
          <div class="book-page right-page">
            <div class="page-content">
              <div class="text-content">
                <p id="storyText" class="story-text">
                  {story.config.pages[0]}
                </p>
              </div>
              
              <!-- 页面底部控制区域 -->
              <div class="page-controls">
                <!-- 音频控制区域 -->
                <div class="audio-controls" id="audioControls">
                  <button id="playPauseBtn" class="audio-btn" title="播放/暂停">
                    <svg id="playIcon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <polygon points="5,3 19,12 5,21"/>
                    </svg>
                    <svg id="pauseIcon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: none;">
                      <rect x="6" y="4" width="4" height="16"/>
                      <rect x="14" y="4" width="4" height="16"/>
                    </svg>
                  </button>
                  <div class="audio-progress">
                    <div class="progress-bar" id="progressBar">
                      <div class="progress-fill" id="progressFill"></div>
                    </div>
                    <div class="audio-time">
                      <span id="currentTime">0:00</span> / <span id="totalTime">0:00</span>
                    </div>
                  </div>
                  <audio id="audioPlayer" preload="metadata"></audio>
                </div>
                
                <!-- 页码指示器 -->
                <div class="page-indicator">
                  <span class="current-page-info">第 <span id="currentPageNum">1</span> 页</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 翻页控制按钮 -->
        <div class="navigation-controls">
          <button id="prevBtn" class="page-turn-btn prev-btn" disabled>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="m15 18-6-6 6-6"/>
            </svg>
          </button>
          <button id="nextBtn" class="page-turn-btn next-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="m9 18 6-6-6-6"/>
            </svg>
          </button>
        </div>

        <!-- 阅读选项 -->
        <div class="reading-options">
          <button id="fullscreenBtn" class="option-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
            </svg>
            全屏阅读
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- 数据传递给JavaScript -->
  <script define:vars={{ 
    storyPages: story.config.pages,
    storyImages: story.images.pages,
    storyAudios: story.audios?.pages || [],
    storyTitle: story.config.title
  }}>
    // 书本阅读器功能
    class BookReader {
      constructor(pages, images, audios, title) {
        this.pages = pages;
        this.images = images;
        this.audios = audios;
        this.title = title;
        this.currentPage = 0;
        this.totalPages = pages.length;
        this.isFullscreen = false;
        this.hasAudio = audios && audios.length > 0;
        
        // 音频相关状态
        this.isPlaying = false;
        this.shouldAutoPlay = false; // 用户是否开启了自动播放
        this.currentAudio = null;
        
        this.initElements();
        this.bindEvents();
        this.updatePage();
        this.initAudioControls();
      }

      initElements() {
        this.storyImage = document.getElementById('storyImage');
        this.storyText = document.getElementById('storyText');
        this.currentPageNumSpan = document.getElementById('currentPageNum');
        this.prevBtn = document.getElementById('prevBtn');
        this.nextBtn = document.getElementById('nextBtn');
        this.fullscreenBtn = document.getElementById('fullscreenBtn');
        this.bookContainer = document.getElementById('bookContainer');
        this.leftPage = document.querySelector('.left-page');
        this.rightPage = document.querySelector('.right-page');
        
        // 音频相关元素
        this.audioPlayer = document.getElementById('audioPlayer');
        this.audioControls = document.getElementById('audioControls');
        this.playPauseBtn = document.getElementById('playPauseBtn');
        this.playIcon = document.getElementById('playIcon');
        this.pauseIcon = document.getElementById('pauseIcon');
        this.progressBar = document.getElementById('progressBar');
        this.progressFill = document.getElementById('progressFill');
        this.currentTimeSpan = document.getElementById('currentTime');
        this.totalTimeSpan = document.getElementById('totalTime');
      }

      bindEvents() {
        // 导航按钮事件
        this.prevBtn.addEventListener('click', () => this.previousPage());
        this.nextBtn.addEventListener('click', () => this.nextPage());
        
        // 键盘导航
        document.addEventListener('keydown', (e) => {
          if (e.key === 'ArrowLeft') this.previousPage();
          if (e.key === 'ArrowRight') this.nextPage();
          if (e.key === 'Escape' && this.isFullscreen) this.exitFullscreen();
          if (e.key === ' ') {
            e.preventDefault();
            this.nextPage();
          }
        });

        // 全屏功能
        this.fullscreenBtn.addEventListener('click', () => this.toggleFullscreen());

        // 点击页面翻页
        this.leftPage.addEventListener('click', (e) => {
          if (e.target !== this.storyImage) this.previousPage();
        });
        
        this.rightPage.addEventListener('click', (e) => {
          if (!e.target.closest('.page-controls')) this.nextPage();
        });

        // 触摸滑动支持（移动端）
        let startX = 0;
        let endX = 0;
        
        this.bookContainer.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
        }, { passive: true });
        
        this.bookContainer.addEventListener('touchend', (e) => {
          endX = e.changedTouches[0].clientX;
          const diff = startX - endX;
          
          if (Math.abs(diff) > 50) { // 最小滑动距离
            if (diff > 0) {
              this.nextPage(); // 向左滑动，下一页
            } else {
              this.previousPage(); // 向右滑动，上一页
            }
          }
        }, { passive: true });
      }

      updatePage() {
        // 添加翻页动画
        this.addPageTurnAnimation();
        
        setTimeout(() => {
          // 更新图片
          this.storyImage.src = this.images[this.currentPage];
          this.storyImage.alt = `${this.title} - 第${this.currentPage + 1}页`;
          
          // 图片加载错误处理
          this.storyImage.onerror = () => {
            console.warn(`图片加载失败: ${this.images[this.currentPage]}`);
            // 可以设置默认图片或显示加载失败提示
          };
          
          // 更新文字
          this.storyText.textContent = this.pages[this.currentPage];
          
          // 更新页码
          this.currentPageNumSpan.textContent = this.currentPage + 1;
          
          // 更新按钮状态
          this.prevBtn.disabled = this.currentPage === 0;
          this.nextBtn.disabled = this.currentPage === this.totalPages - 1;
          
          // 更新音频
          this.updateAudio();
          
          this.removePageTurnAnimation();
        }, 200);
      }

      addPageTurnAnimation() {
        this.leftPage.style.transform = 'rotateY(-10deg)';
        this.rightPage.style.transform = 'rotateY(10deg)';
        this.leftPage.style.opacity = '0.8';
        this.rightPage.style.opacity = '0.8';
      }

      removePageTurnAnimation() {
        this.leftPage.style.transform = 'rotateY(0deg)';
        this.rightPage.style.transform = 'rotateY(0deg)';
        this.leftPage.style.opacity = '1';
        this.rightPage.style.opacity = '1';
      }

      previousPage() {
        if (this.currentPage > 0) {
          this.currentPage--;
          this.updatePage();
        }
      }

      nextPage() {
        if (this.currentPage < this.totalPages - 1) {
          this.currentPage++;
          this.updatePage();
        }
      }

      toggleFullscreen() {
        if (!this.isFullscreen) {
          this.enterFullscreen();
        } else {
          this.exitFullscreen();
        }
      }

      enterFullscreen() {
        this.bookContainer.classList.add('fullscreen');
        document.body.style.overflow = 'hidden';
        this.isFullscreen = true;
        this.fullscreenBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"/>
          </svg>
          退出全屏
        `;
      }

      exitFullscreen() {
        this.bookContainer.classList.remove('fullscreen');
        document.body.style.overflow = '';
        this.isFullscreen = false;
        this.fullscreenBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
          </svg>
          全屏阅读
        `;
      }

      initAudioControls() {
        if (!this.hasAudio) {
          this.audioControls.style.display = 'none';
          return;
        }

        this.audioControls.style.display = 'flex';

        // 播放/暂停按钮事件
        this.playPauseBtn.addEventListener('click', () => {
          this.togglePlayPause();
        });

        // 进度条点击事件
        this.progressBar.addEventListener('click', (e) => {
          if (this.currentAudio) {
            const rect = this.progressBar.getBoundingClientRect();
            const clickX = e.clientX - rect.left;
            const progressPercent = clickX / rect.width;
            const newTime = progressPercent * this.currentAudio.duration;
            this.currentAudio.currentTime = newTime;
          }
        });

        // 音频事件监听
        if (this.audioPlayer) {
          this.audioPlayer.addEventListener('loadedmetadata', () => {
            this.updateTotalTime();
          });

          this.audioPlayer.addEventListener('timeupdate', () => {
            this.updateProgress();
          });

          this.audioPlayer.addEventListener('ended', () => {
            this.onAudioEnded();
          });

          this.audioPlayer.addEventListener('error', (e) => {
            console.warn('音频加载失败:', e);
            this.resetAudioUI();
          });
        }

        // 初始化第一个音频
        this.loadAudio(this.currentPage);
      }

      loadAudio(pageIndex) {
        if (!this.hasAudio || !this.audios[pageIndex]) {
          return;
        }

        const audioUrl = this.audios[pageIndex];
        this.audioPlayer.src = audioUrl;
        this.currentAudio = this.audioPlayer;

        // 如果用户之前开启了自动播放，则在音频加载完成后播放
        if (this.shouldAutoPlay) {
          this.audioPlayer.addEventListener('canplaythrough', () => {
            this.playAudio();
          }, { once: true });
        }
      }

      updateAudio() {
        if (!this.hasAudio) return;

        // 停止当前音频
        if (this.currentAudio) {
          this.currentAudio.pause();
          this.currentAudio.currentTime = 0;
        }

        // 加载新页面的音频
        this.loadAudio(this.currentPage);
        this.resetAudioUI();
      }

      togglePlayPause() {
        if (!this.currentAudio) return;

        if (this.isPlaying) {
          this.pauseAudio();
        } else {
          this.playAudio();
        }
      }

      playAudio() {
        if (!this.currentAudio) return;

        this.currentAudio.play().then(() => {
          this.isPlaying = true;
          this.shouldAutoPlay = true; // 记住用户的播放偏好
          this.updatePlayPauseButton();
        }).catch(error => {
          console.warn('音频播放失败:', error);
        });
      }

      pauseAudio() {
        if (!this.currentAudio) return;

        this.currentAudio.pause();
        this.isPlaying = false;
        this.shouldAutoPlay = false; // 用户手动暂停，停止自动播放
        this.updatePlayPauseButton();
      }

      updatePlayPauseButton() {
        if (this.isPlaying) {
          this.playIcon.style.display = 'none';
          this.pauseIcon.style.display = 'block';
          this.playPauseBtn.title = '暂停';
        } else {
          this.playIcon.style.display = 'block';
          this.pauseIcon.style.display = 'none';
          this.playPauseBtn.title = '播放';
        }
      }

      updateProgress() {
        if (!this.currentAudio) return;

        const progress = (this.currentAudio.currentTime / this.currentAudio.duration) * 100;
        this.progressFill.style.width = `${progress}%`;
        
        this.currentTimeSpan.textContent = this.formatTime(this.currentAudio.currentTime);
      }

      updateTotalTime() {
        if (!this.currentAudio) return;
        
        this.totalTimeSpan.textContent = this.formatTime(this.currentAudio.duration);
      }

      formatTime(seconds) {
        if (isNaN(seconds)) return '0:00';
        
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs.toString().padStart(2, '0')}`;
      }

      resetAudioUI() {
        this.isPlaying = false;
        this.updatePlayPauseButton();
        this.progressFill.style.width = '0%';
        this.currentTimeSpan.textContent = '0:00';
        this.totalTimeSpan.textContent = '0:00';
      }

      onAudioEnded() {
        this.isPlaying = false;
        this.updatePlayPauseButton();
        // 音频结束后不自动播放下一页，保持用户的控制权
      }
    }

    // 初始化书本阅读器
    document.addEventListener('DOMContentLoaded', () => {
      new BookReader(storyPages, storyImages, storyAudios, storyTitle);
    });
  </script>

  <style>
    /* 全局样式 */
    * {
      box-sizing: border-box;
    }

    .story-reader {
      min-height: 100vh;
      background: linear-gradient(135deg, #ffeef8 0%, #f0f4ff 100%);
      background-attachment: fixed;
      position: relative;
    }

    /* 导航栏样式 - 与主页保持一致 */
    .story-nav {
      background: rgba(255, 255, 255, 0.8);
      backdrop-filter: blur(20px);
      padding: 1.2rem 2rem;
      border-bottom: 1px solid rgba(255, 154, 158, 0.2);
      position: sticky;
      top: 0;
      z-index: 100;
      box-shadow: 0 4px 20px rgba(255, 105, 180, 0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 0.6rem;
      color: #a855f7;
      text-decoration: none;
      font-size: 0.95rem;
      margin-bottom: 0.6rem;
      transition: all 0.3s ease;
      font-weight: 600;
      padding: 8px 12px;
      border-radius: 20px;
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 105, 180, 0.2);
    }

    .back-btn:hover {
      color: #ec4899;
      transform: translateX(-3px) scale(1.05);
      background: rgba(255, 255, 255, 0.3);
      box-shadow: 0 3px 10px rgba(168, 85, 247, 0.2);
    }

    .book-info {
      color: #4b5563;
    }

    .story-title {
      font-size: 1.9rem;
      font-weight: bold;
      background: linear-gradient(135deg, #ec4899, #a855f7, #3b82f6);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin: 0.6rem 0;
      text-shadow: none;
      font-family: '微软雅黑', 'Microsoft YaHei', sans-serif;
    }

    .story-meta {
      display: flex;
      gap: 1.5rem;
      font-size: 0.95rem;
      color: #6b7280;
      font-weight: 500;
    }

    /* 书本容器 */
    .book-container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: calc(100vh - 120px);
      padding: 2rem;
      perspective: 1000px;
    }

    .book-wrapper {
      position: relative;
      max-width: 1400px;
      width: 100%;
      aspect-ratio: 16/10; /* 适配图片比例 */
    }

    /* 书本封面/背景 */
    .book-cover {
      position: relative;
      display: flex;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, #fdf2f8, #f3e8ff, #ddd6fe);
      border-radius: 20px;
      box-shadow: 
        0 25px 50px rgba(168, 85, 247, 0.15),
        0 15px 30px rgba(0, 0, 0, 0.1),
        inset 0 2px 8px rgba(255, 255, 255, 0.4);
      overflow: hidden;
      transform-style: preserve-3d;
      position: relative;
    }

    /* 添加童真的装饰图案 */
    .book-cover::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: 
        radial-gradient(circle at 20% 20%, rgba(168, 85, 247, 0.1) 2px, transparent 2px),
        radial-gradient(circle at 80% 80%, rgba(236, 72, 153, 0.08) 1px, transparent 1px),
        radial-gradient(circle at 40% 60%, rgba(59, 130, 246, 0.06) 3px, transparent 3px);
      background-size: 50px 50px, 30px 30px, 70px 70px;
      pointer-events: none;
      z-index: 1;
    }

    /* 书脊效果 */
    .book-spine {
      position: absolute;
      left: 50%;
      top: 0;
      width: 12px;
      height: 100%;
      background: linear-gradient(to right, #a855f7, #ec4899, #a855f7);
      transform: translateX(-50%);
      z-index: 15;
      box-shadow: 
        -3px 0 6px rgba(168, 85, 247, 0.3),
        3px 0 6px rgba(168, 85, 247, 0.3);
      border-radius: 6px;
    }

    /* 书页样式 */
    .book-page {
      flex: 1;
      height: 100%;
      background: #FFFEF9;
      position: relative;
      transition: all 0.3s ease;
      transform-origin: center center;
      z-index: 5;
    }

    .book-page::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        45deg,
        transparent 0%,
        rgba(168, 85, 247, 0.02) 25%,
        transparent 50%,
        rgba(168, 85, 247, 0.02) 75%,
        transparent 100%
      );
      background-size: 30px 30px;
      pointer-events: none;
    }

    .left-page {
      margin: 15px 6px 15px 15px;
      border-radius: 15px 0 0 15px;
      box-shadow: 
        inset 3px 0 15px rgba(168, 85, 247, 0.1),
        0 8px 25px rgba(0, 0, 0, 0.08);
    }

    .right-page {
      margin: 15px 15px 15px 6px;
      border-radius: 0 15px 15px 0;
      box-shadow: 
        inset -3px 0 15px rgba(168, 85, 247, 0.1),
        0 8px 25px rgba(0, 0, 0, 0.08);
    }

    /* 页面内容 */
    .page-content {
      height: 100%;
      display: flex;
      flex-direction: column;
      position: relative;
    }

    /* 左页内容调整 - 无边距完整展示图片 */
    .left-page .page-content {
      padding: 0;
    }

    /* 右页内容调整 - 垂直居中 */
    .right-page .page-content {
      padding: 30px;
      justify-content: center;
    }

    /* 图片框架 - 完整展示，保留纸张感阴影 */
    .image-frame {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      background: transparent;
      border: none;
      border-radius: 15px 0 0 15px;
      overflow: hidden;
      box-shadow: 
        inset 8px 0 20px rgba(168, 85, 247, 0.12),
        0 5px 20px rgba(0, 0, 0, 0.08);
      margin: 0;
      position: relative;
    }

    /* 添加纸张质感 */
    .image-frame::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0.1) 0%,
        transparent 10%,
        transparent 90%,
        rgba(0, 0, 0, 0.02) 100%
      );
      pointer-events: none;
      z-index: 2;
    }

    .story-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      transition: all 0.3s ease;
      filter: brightness(1.05) contrast(1.08) saturate(1.1);
    }

    .story-image:hover {
      transform: scale(1.01);
      filter: brightness(1.1) contrast(1.12) saturate(1.15);
    }

    /* 文字内容区域 - 垂直居中 */
    .text-content {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0;
      padding: 25px 20px;
      background: linear-gradient(135deg, rgba(253, 242, 248, 0.8), rgba(243, 232, 255, 0.6));
      border-radius: 12px;
      border-left: 5px solid #a855f7;
      box-shadow: 
        0 3px 15px rgba(168, 85, 247, 0.15),
        inset 0 1px 3px rgba(255, 255, 255, 0.5);
    }

    .story-text {
      font-size: 1.2rem;
      line-height: 2;
      color: #374151;
      margin: 0;
      font-family: '微软雅黑', 'Microsoft YaHei', 'PingFang SC', sans-serif;
      text-align: justify;
      text-indent: 2em;
      letter-spacing: 0.5px;
      font-weight: 400;
    }

    /* 页面控制区域 */
    .page-controls {
      margin-top: 20px;
      padding-top: 15px;
    }

    .audio-controls {
      display: flex;
      align-items: center;
      gap: 15px;
      padding: 15px;
      background: linear-gradient(135deg, rgba(168, 85, 247, 0.08), rgba(236, 72, 153, 0.1));
      border-radius: 12px;
      margin-bottom: 15px;
      border: 1px solid rgba(168, 85, 247, 0.15);
    }

    .audio-btn {
      background: linear-gradient(135deg, #a855f7, #ec4899);
      border: none;
      border-radius: 50%;
      width: 45px;
      height: 45px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(168, 85, 247, 0.25);
    }

    .audio-btn:hover {
      background: linear-gradient(135deg, #ec4899, #a855f7);
      transform: scale(1.1) translateY(-2px);
      box-shadow: 0 6px 20px rgba(168, 85, 247, 0.35);
    }

    .audio-progress {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .progress-bar {
      width: 100%;
      height: 6px;
      background: rgba(168, 85, 247, 0.15);
      border-radius: 3px;
      overflow: hidden;
      cursor: pointer;
    }

    .progress-bar:hover {
      height: 8px;
    }

    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #a855f7, #ec4899);
      width: 0%;
      transition: width 0.1s;
    }

    .audio-time {
      font-size: 0.8rem;
      color: #6b7280;
      text-align: center;
      font-weight: 500;
    }

    .page-indicator {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      font-size: 0.95rem;
      color: #6b7280;
      font-weight: 500;
    }

    .current-page-info {
      font-style: italic;
      background: linear-gradient(135deg, rgba(168, 85, 247, 0.08), rgba(236, 72, 153, 0.1));
      padding: 5px 12px;
      border-radius: 15px;
      border: 1px solid rgba(168, 85, 247, 0.15);
    }

    /* 翻页控制按钮 - 童真可爱风格 */
    .navigation-controls {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 100%;
      display: flex;
      justify-content: space-between;
      pointer-events: none;
      z-index: 20;
      padding: 0 20px;
    }

    .page-turn-btn {
      background: linear-gradient(135deg, #a855f7, #ec4899);
      border: 3px solid rgba(255, 255, 255, 0.8);
      border-radius: 50%;
      width: 55px;
      height: 55px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      transition: all 0.3s ease;
      pointer-events: auto;
      box-shadow: 
        0 6px 20px rgba(168, 85, 247, 0.25),
        0 3px 10px rgba(0, 0, 0, 0.08);
      backdrop-filter: blur(10px);
    }

    .page-turn-btn:hover:not(:disabled) {
      background: linear-gradient(135deg, #ec4899, #3b82f6);
      transform: scale(1.15) translateY(-3px);
      box-shadow: 
        0 8px 25px rgba(168, 85, 247, 0.35),
        0 5px 15px rgba(0, 0, 0, 0.12);
      border-color: rgba(255, 255, 255, 1);
    }

    .page-turn-btn:disabled {
      opacity: 0.3;
      cursor: not-allowed;
      transform: none;
      background: linear-gradient(135deg, #d1d5db, #9ca3af);
    }

    .prev-btn {
      left: -25px;
    }

    .next-btn {
      right: -25px;
    }

    /* 阅读选项 - 童真可爱风格 */
    .reading-options {
      position: absolute;
      bottom: 25px;
      right: 25px;
      z-index: 20;
    }

    .option-btn {
      background: linear-gradient(135deg, #a855f7, #ec4899);
      border: 2px solid rgba(255, 255, 255, 0.8);
      color: white;
      padding: 10px 16px;
      border-radius: 25px;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 0.85rem;
      font-weight: 500;
      backdrop-filter: blur(10px);
      box-shadow: 
        0 4px 15px rgba(168, 85, 247, 0.25),
        0 2px 8px rgba(0, 0, 0, 0.08);
    }

    .option-btn:hover {
      background: linear-gradient(135deg, #ec4899, #3b82f6);
      transform: translateY(-3px) scale(1.05);
      box-shadow: 
        0 6px 20px rgba(168, 85, 247, 0.35),
        0 3px 12px rgba(0, 0, 0, 0.12);
      border-color: rgba(255, 255, 255, 1);
    }

    /* 全屏模式 */
    .book-container.fullscreen {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: linear-gradient(135deg, #ffeef8, #f0f4ff);
      z-index: 9999;
      padding: 40px;
    }

    .book-container.fullscreen .book-wrapper {
      max-width: none;
      width: 100%;
      height: 100%;
    }

    .book-container.fullscreen .book-cover {
      height: 100%;
      max-height: none;
    }

    .book-container.fullscreen .story-image {
      filter: brightness(1.1) contrast(1.2) saturate(1.15);
    }

    /* 悬停效果 - 更加柔和可爱 */
    .book-page:hover {
      transform: translateY(-3px) scale(1.005);
      box-shadow: 
        inset 3px 0 25px rgba(168, 85, 247, 0.12),
        inset -3px 0 25px rgba(168, 85, 247, 0.12),
        0 12px 30px rgba(168, 85, 247, 0.1),
        0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .left-page:hover {
      box-shadow: 
        inset 5px 0 20px rgba(168, 85, 247, 0.15),
        0 12px 30px rgba(168, 85, 247, 0.1);
    }

    .right-page:hover {
      box-shadow: 
        inset -5px 0 20px rgba(168, 85, 247, 0.15),
        0 12px 30px rgba(168, 85, 247, 0.1);
    }

    /* 响应式布局 */
    @media (max-width: 1024px) {
      .book-wrapper {
        aspect-ratio: 4/3;
      }
      
      .left-page .page-content {
        padding: 0;
      }

      .right-page .page-content {
        padding: 25px;
      }
      
      .story-text {
        font-size: 1.1rem;
        line-height: 1.9;
      }

      .page-turn-btn {
        width: 50px;
        height: 50px;
      }

      .option-btn {
        padding: 8px 14px;
        font-size: 0.8rem;
      }
    }

    @media (max-width: 768px) {
      .book-container {
        padding: 1rem;
      }

      .book-wrapper {
        aspect-ratio: 3/4;
      }

      .book-cover {
        flex-direction: column;
        min-height: 85vh;
      }

      .book-page {
        margin: 10px 15px;
        min-height: 350px;
      }

      .left-page {
        border-radius: 15px 15px 0 0;
        margin-bottom: 3px;
        box-shadow: 
          inset 0 3px 15px rgba(168, 85, 247, 0.1),
          0 8px 25px rgba(0, 0, 0, 0.08);
      }

      .right-page {
        border-radius: 0 0 15px 15px;
        margin-top: 3px;
        box-shadow: 
          inset 0 -3px 15px rgba(168, 85, 247, 0.1),
          0 8px 25px rgba(0, 0, 0, 0.08);
      }

      .book-spine {
        left: 0;
        right: 0;
        top: 50%;
        width: 100%;
        height: 12px;
        transform: translateY(-50%);
        background: linear-gradient(to bottom, #a855f7, #ec4899, #a855f7);
        border-radius: 6px;
      }

      .left-page .page-content {
        padding: 0;
      }

      .right-page .page-content {
        padding: 25px 20px;
      }

      .image-frame {
        border-radius: 15px 15px 0 0;
      }

      .story-text {
        font-size: 1.05rem;
        line-height: 1.8;
      }

      .story-title {
        font-size: 1.5rem;
      }

      .story-meta {
        flex-direction: column;
        gap: 0.25rem;
      }

      .navigation-controls {
        position: static;
        transform: none;
        justify-content: center;
        gap: 30px;
        margin-top: 25px;
        padding: 0;
      }

      .page-turn-btn {
        position: static;
        margin: 0;
        width: 45px;
        height: 45px;
      }

      .reading-options {
        position: static;
        display: flex;
        justify-content: center;
        margin-top: 20px;
      }

      /* 移动端全屏模式调整 */
      .book-container.fullscreen {
        padding: 15px;
      }

      .book-container.fullscreen .book-wrapper {
        height: 100%;
      }
    }

    @media (max-width: 480px) {
      .book-container {
        padding: 0.5rem;
      }

      .book-wrapper {
        aspect-ratio: 9/16;
      }

      .left-page .page-content {
        padding: 0;
      }

      .right-page .page-content {
        padding: 20px 15px;
        justify-content: center;
      }

      .story-text {
        font-size: 1rem;
        line-height: 1.7;
      }

      .story-nav {
        padding: 1rem;
      }

      .book-cover {
        margin: 0;
        border-radius: 15px;
      }

      .book-page {
        margin: 8px 12px;
        min-height: 300px;
      }

      .text-content {
        padding: 18px 12px;
      }

      .page-turn-btn {
        width: 40px;
        height: 40px;
      }

      .option-btn {
        padding: 6px 12px;
        font-size: 0.75rem;
      }
    }

    /* 深色模式支持 - 童真可爱风格 */
    @media (prefers-color-scheme: dark) {
      .book-cover {
        background: linear-gradient(135deg, #4A4A5A, #5A5A7A, #6A6A8A);
      }

      .book-cover::before {
        background-image: 
          radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.1) 2px, transparent 2px),
          radial-gradient(circle at 80% 80%, rgba(200, 150, 200, 0.1) 1px, transparent 1px),
          radial-gradient(circle at 40% 60%, rgba(150, 150, 200, 0.05) 3px, transparent 3px);
      }

      .book-spine {
        background: linear-gradient(to right, #8B7D9B, #A67CA6, #8B7D9B);
      }

      .book-page {
        background: #2A2A2F;
        color: #E0E0E0;
      }

      .story-text {
        color: #E0E0E0;
      }

      .text-content {
        background: linear-gradient(135deg, rgba(139, 125, 155, 0.15), rgba(166, 124, 166, 0.1));
        border-left-color: #A67CA6;
      }

      .image-frame {
        background: transparent;
        box-shadow: 
          inset 8px 0 20px rgba(139, 125, 155, 0.2),
          0 5px 20px rgba(0, 0, 0, 0.2);
      }

      .story-image {
        filter: brightness(0.9) contrast(1.1) saturate(1.05);
      }

      .page-turn-btn {
        background: linear-gradient(135deg, #8B7D9B, #A67CA6);
      }

      .page-turn-btn:hover:not(:disabled) {
        background: linear-gradient(135deg, #A67CA6, #8B7D9B);
      }

      .option-btn {
        background: linear-gradient(135deg, #8B7D9B, #A67CA6);
      }

      .option-btn:hover {
        background: linear-gradient(135deg, #A67CA6, #8B7D9B);
      }

      .audio-btn {
        background: linear-gradient(135deg, #8B7D9B, #A67CA6);
      }

      .audio-btn:hover {
        background: linear-gradient(135deg, #A67CA6, #8B7D9B);
      }
    }

    /* 打印样式 */
    @media print {
      .story-nav,
      .navigation-controls,
      .reading-options,
      .audio-controls {
        display: none !important;
      }

      .book-container {
        padding: 0;
        background: white;
      }

      .book-cover {
        box-shadow: none;
        height: auto;
      }

      .book-page {
        box-shadow: none;
        page-break-inside: avoid;
      }
    }
  </style>
</Layout>
